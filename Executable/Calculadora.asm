section .data
	stack times 1000 db 0
	heap times 1000 db 0
	labelText0: db 'Bienvenido',0
	labelText1: db 'Archivo de prueba...',0
	labelText2: db 'Ingrese el primer valor entero',0
	labelText3: db 'Ingrese el segudo valor entero ',0
	labelText4: db ' + es igual a',0
	labelText5: db ' + es igual a',0
	labelText6: db ' + es igual a',0
	labelText7: db ' + es igual a',0
	labelText8: db ' mod es igual a',0
	labelText9: db 'Arreglo [ ',0
	labelText10: db ' ] [ 0 ] su contenido es',0
	labelText11: db 'Arreglo [ ',0
	labelText12: db ' ] [ 1 ] su contenido es',0
	labelText13: db 'Arreglo [ ',0
	labelText14: db ' ] [ 0 ] su contenido es ',0
	labelText15: db 'Arreglo [ ',0
	labelText16: db ' ] [ 1 ] su contenido es ',0
section .text
	global _start
_printSubroutine:
	push rax
	mov rbx, 0
_printSubroutineLoop:
	inc rax
	inc rbx
	mov cl, [rax]
	cmp cl, 0
	jne _printSubroutineLoop
	mov rax, 1
	mov rdi, 1
	pop rsi
	mov rdx, rbx
	syscall
	ret
_VB_SUMAR:
	mov eax, 0
	mov [t1], eax
	mov eax, p
	add eax, t2
	mov t2, eax
	mov eax, t1
	mov eax, t1
	mov [stack+t2], eax
	mov eax, p
	add eax, t3
	mov t3, eax
	mov eax, [stack+t3]
	mov [t4], eax
	mov eax, p
	add eax, t5
	mov t5, eax
	mov eax, [stack+t5]
	mov [t6], eax
	mov eax, t4
	add eax, t7
	mov t7, eax
	mov eax, p
	add eax, t8
	mov t8, eax
	mov eax, t7
	mov eax, t7
	mov [stack+t8], eax
	mov eax, p
	add eax, t9
	mov t9, eax
	mov eax, [stack+t9]
	mov [t10], eax
	mov eax, p
	add eax, t11
	mov t11, eax
	mov eax, t10
	mov eax, t10
	mov [stack+t11], eax
	jmp _etv1
_etv1:
	ret
_VB_RESTAR:
	mov eax, 0
	mov [t12], eax
	mov eax, p
	add eax, t13
	mov t13, eax
	mov eax, t12
	mov eax, t12
	mov [stack+t13], eax
	mov eax, p
	add eax, t14
	mov t14, eax
	mov eax, [stack+t14]
	mov [t15], eax
	mov eax, p
	add eax, t16
	mov t16, eax
	mov eax, [stack+t16]
	mov [t17], eax
	mov eax, t15
	sub eax, t18
	mov t18, eax
	mov eax, p
	add eax, t19
	mov t19, eax
	mov eax, t18
	mov eax, t18
	mov [stack+t19], eax
	mov eax, p
	add eax, t20
	mov t20, eax
	mov eax, [stack+t20]
	mov [t21], eax
	mov eax, p
	add eax, t22
	mov t22, eax
	mov eax, t21
	mov eax, t21
	mov [stack+t22], eax
	jmp _etv2
_etv2:
	ret
_VB_MULTIPLICAR:
	mov eax, 0
	mov [t23], eax
	mov eax, p
	add eax, t24
	mov t24, eax
	mov eax, t23
	mov eax, t23
	mov [stack+t24], eax
	mov eax, p
	add eax, t25
	mov t25, eax
	mov eax, [stack+t25]
	mov [t26], eax
	mov eax, p
	add eax, t27
	mov t27, eax
	mov eax, [stack+t27]
	mov [t28], eax
	mov eax, t26
	mul eax, t29
	mov t29, eax
	mov eax, p
	add eax, t30
	mov t30, eax
	mov eax, t29
	mov eax, t29
	mov [stack+t30], eax
	mov eax, p
	add eax, t31
	mov t31, eax
	mov eax, [stack+t31]
	mov [t32], eax
	mov eax, p
	add eax, t33
	mov t33, eax
	mov eax, t32
	mov eax, t32
	mov [stack+t33], eax
	jmp _etv3
_etv3:
	ret
_PY_DIVIDIR:
	mov eax, p
	add eax, t34
	mov t34, eax
	mov eax, [stack+t34]
	mov [t35], eax
	mov eax, p
	add eax, t36
	mov t36, eax
	mov eax, [stack+t36]
	mov [t37], eax
	mov eax, t35
	mov ax, t38
	sub ax, '0'
	mov bl, t35
	sub bl, '0'
	div bl
	add ax, '0'
	mov t38, eax
	mov eax, p
	add eax, t39
	mov t39, eax
	mov eax, t38
	mov eax, t38
	mov [stack+t39], eax
	jmp _etv4
_etv4:
	ret
_PY_MODULO:
	mov eax, p
	add eax, t40
	mov t40, eax
	mov eax, [stack+t40]
	mov [t41], eax
	mov eax, p
	add eax, t42
	mov t42, eax
	mov eax, [stack+t42]
	mov [t43], eax
	mov eax, t41
	mov t44, eax
	mov eax, p
	add eax, t45
	mov t45, eax
	mov eax, t44
	mov eax, t44
	mov [stack+t45], eax
	mov eax, p
	add eax, t46
	mov t46, eax
	mov eax, [stack+t46]
	mov [t47], eax
	mov eax, p
	add eax, t48
	mov t48, eax
	mov eax, t47
	mov eax, t47
	mov [stack+t48], eax
	jmp _etv5
_etv5:
	ret
_start:
	mov eax, p
	add eax, t49
	mov t49, eax
	mov eax, 2
	mov eax, 2
	mov [stack+t49], eax
	mov eax, p
	add eax, t50
	mov t50, eax
	mov eax, 2
	mov eax, 2
	mov [stack+t50], eax
	mov eax, 0
	mov [t51], eax
	mov eax, p
	add eax, t52
	mov t52, eax
	mov eax, t51
	mov eax, t51
	mov [stack+t52], eax
	mov eax, 1
	mov [t53], eax
	mov eax, p
	add eax, t54
	mov t54, eax
	mov eax, t53
	mov eax, t53
	mov [stack+t54], eax
	mov eax, 3
	mov [t55], eax
	mov eax, p
	add eax, t56
	mov t56, eax
	mov eax, t55
	mov eax, t55
	mov [stack+t56], eax
	mov eax, 4
	mov [t57], eax
	mov eax, p
	add eax, t58
	mov t58, eax
	mov eax, t57
	mov eax, t57
	mov [stack+t58], eax
	mov eax, 0
	mov [t59], eax
	mov eax, p
	add eax, t60
	mov t60, eax
	mov eax, t59
	mov eax, t59
	mov [stack+t60], eax
	mov eax, 1
	add eax, t61
	mov t61, eax
	mov eax, p
	add eax, t62
	mov t62, eax
	mov eax, t61
	mov eax, t61
	mov [stack+t62], eax
	mov eax, 0
	mov [t63], eax
	mov eax, p
	add eax, t64
	mov t64, eax
	mov eax, t63
	mov eax, t63
	mov [stack+t64], eax
	mov eax, 86
	mov [t65], eax
	mov eax, p
	add eax, t66
	mov t66, eax
	mov eax, t65
	mov eax, t65
	mov [stack+t66], eax
	mov eax, 100
	mov [t67], eax
	mov eax, p
	add eax, t68
	mov t68, eax
	mov eax, t67
	mov eax, t67
	mov [stack+t68], eax
	mov rax, labelText0
	call _printSubroutine
	mov rax, labelText1
	call _printSubroutine
	mov rax, labelText2
	call _printSubroutine
	mov eax, p
	add eax, t69
	mov t69, eax
	mov eax, t70
	mov eax, t70
	mov [stack+t69], eax
	mov rax, labelText3
	call _printSubroutine
	mov eax, p
	add eax, t71
	mov t71, eax
	mov eax, t72
	mov eax, t72
	mov [stack+t71], eax
	mov eax, p
	add eax, t73
	mov t73, eax
	mov eax, [stack+t73]
	mov [t74], eax
	mov eax, p
	add eax, t75
	mov t75, eax
	mov eax, [stack+t75]
	mov [t76], eax
	mov eax, p
	add eax, t77
	mov t77, eax
	mov eax, t77
	add eax, t78
	mov t78, eax
	mov eax, p
	add eax, t79
	mov t79, eax
	mov eax, t79
	add eax, t80
	mov t80, eax
	mov eax, t74
	mov eax, t74
	mov [stack+t78], eax
	mov eax, t76
	mov eax, t76
	mov [stack+t80], eax
	mov eax, p
	add eax, p
	mov p, eax
	mov eax, p
	add eax, t81
	mov t81, eax
	mov eax, [stack+t81]
	mov [t82], eax
	mov eax, p
	sub eax, p
	mov p, eax
	mov eax, p
	add eax, t83
	mov t83, eax
	mov eax, t82
	mov eax, t82
	mov [stack+t83], eax
	mov eax, p
	add eax, t84
	mov t84, eax
	mov eax, [stack+t84]
	mov [t85], eax
	mov eax, p
	add eax, t86
	mov t86, eax
	mov eax, [stack+t86]
	mov [t87], eax
	mov eax, p
	add eax, t88
	mov t88, eax
	mov eax, t88
	add eax, t89
	mov t89, eax
	mov eax, p
	add eax, t90
	mov t90, eax
	mov eax, t90
	add eax, t91
	mov t91, eax
	mov eax, t85
	mov eax, t85
	mov [stack+t89], eax
	mov eax, t87
	mov eax, t87
	mov [stack+t91], eax
	mov eax, p
	add eax, p
	mov p, eax
	mov eax, p
	add eax, t92
	mov t92, eax
	mov eax, [stack+t92]
	mov [t93], eax
	mov eax, p
	sub eax, p
	mov p, eax
	mov eax, p
	add eax, t94
	mov t94, eax
	mov eax, t93
	mov eax, t93
	mov [stack+t94], eax
	mov eax, p
	add eax, t95
	mov t95, eax
	mov eax, [stack+t95]
	mov [t96], eax
	mov eax, p
	add eax, t97
	mov t97, eax
	mov eax, [stack+t97]
	mov [t98], eax
	mov eax, p
	add eax, t99
	mov t99, eax
	mov eax, t99
	add eax, t100
	mov t100, eax
	mov eax, p
	add eax, t101
	mov t101, eax
	mov eax, t101
	add eax, t102
	mov t102, eax
	mov eax, t96
	mov eax, t96
	mov [stack+t100], eax
	mov eax, t98
	mov eax, t98
	mov [stack+t102], eax
	mov eax, p
	add eax, p
	mov p, eax
	mov eax, p
	add eax, t103
	mov t103, eax
	mov eax, [stack+t103]
	mov [t104], eax
	mov eax, p
	sub eax, p
	mov p, eax
	mov eax, p
	add eax, t105
	mov t105, eax
	mov eax, t104
	mov eax, t104
	mov [stack+t105], eax
	mov eax, p
	add eax, t106
	mov t106, eax
	mov eax, [stack+t106]
	mov [t107], eax
	mov eax, p
	add eax, t108
	mov t108, eax
	mov eax, [stack+t108]
	mov [t109], eax
	mov eax, p
	add eax, t110
	mov t110, eax
	mov eax, t110
	add eax, t111
	mov t111, eax
	mov eax, p
	add eax, t112
	mov t112, eax
	mov eax, t112
	add eax, t113
	mov t113, eax
	mov eax, t107
	mov eax, t107
	mov [stack+t111], eax
	mov eax, t109
	mov eax, t109
	mov [stack+t113], eax
	mov eax, p
	add eax, p
	mov p, eax
	mov eax, p
	add eax, t114
	mov t114, eax
	mov eax, [stack+t114]
	mov [t115], eax
	mov eax, p
	sub eax, p
	mov p, eax
	mov eax, p
	add eax, t116
	mov t116, eax
	mov eax, t115
	mov eax, t115
	mov [stack+t116], eax
	mov eax, p
	add eax, t117
	mov t117, eax
	mov eax, [stack+t117]
	mov [t118], eax
	mov eax, p
	add eax, t119
	mov t119, eax
	mov eax, [stack+t119]
	mov [t120], eax
	mov eax, p
	add eax, t121
	mov t121, eax
	mov eax, t121
	add eax, t122
	mov t122, eax
	mov eax, p
	add eax, t123
	mov t123, eax
	mov eax, t123
	add eax, t124
	mov t124, eax
	mov eax, t118
	mov eax, t118
	mov [stack+t122], eax
	mov eax, t120
	mov eax, t120
	mov [stack+t124], eax
	mov eax, p
	add eax, p
	mov p, eax
	mov eax, p
	add eax, t125
	mov t125, eax
	mov eax, [stack+t125]
	mov [t126], eax
	mov eax, p
	sub eax, p
	mov p, eax
	mov eax, p
	add eax, t127
	mov t127, eax
	mov eax, t126
	mov eax, t126
	mov [stack+t127], eax
	mov eax, p
	add eax, t128
	mov t128, eax
	mov eax, [stack+t128]
	mov [t129], eax
	mov rax, labelText4
	call _printSubroutine
	mov eax, p
	add eax, t130
	mov t130, eax
	mov eax, [stack+t130]
	mov [t131], eax
	mov rax, labelText5
	call _printSubroutine
	mov eax, p
	add eax, t132
	mov t132, eax
	mov eax, [stack+t132]
	mov [t133], eax
	mov rax, labelText6
	call _printSubroutine
	mov eax, p
	add eax, t134
	mov t134, eax
	mov eax, [stack+t134]
	mov [t135], eax
	mov rax, labelText7
	call _printSubroutine
	mov eax, p
	add eax, t136
	mov t136, eax
	mov eax, [stack+t136]
	mov [t137], eax
	mov rax, labelText8
	call _printSubroutine
	mov eax, 0
	mov [t138], eax
	mov eax, 0
	mov [t139], eax
	mov eax, p
	add eax, t140
	mov t140, eax
	mov eax, [stack+t140]
	mov [t141], eax
	mov eax, t139
	mul eax, t142
	mov t142, eax
	mov eax, t142
	add eax, t143
	mov t143, eax
	mov eax, p
	add eax, t144
	mov t144, eax
	mov eax, t144
	add eax, t145
	mov t145, eax
	mov eax, t141
	mov eax, t141
	mov [stack+t145], eax
	mov eax, 0
	mov [t146], eax
	mov eax, 1
	mov [t147], eax
	mov eax, p
	add eax, t148
	mov t148, eax
	mov eax, [stack+t148]
	mov [t149], eax
	mov eax, t147
	mul eax, t150
	mov t150, eax
	mov eax, t150
	add eax, t151
	mov t151, eax
	mov eax, p
	add eax, t152
	mov t152, eax
	mov eax, t152
	add eax, t153
	mov t153, eax
	mov eax, t149
	mov eax, t149
	mov [stack+t153], eax
	mov eax, 1
	mov [t154], eax
	mov eax, 0
	mov [t155], eax
	mov eax, p
	add eax, t156
	mov t156, eax
	mov eax, [stack+t156]
	mov [t157], eax
	mov eax, t155
	mul eax, t158
	mov t158, eax
	mov eax, t158
	add eax, t159
	mov t159, eax
	mov eax, p
	add eax, t160
	mov t160, eax
	mov eax, t160
	add eax, t161
	mov t161, eax
	mov eax, t157
	mov eax, t157
	mov [stack+t161], eax
	mov eax, 1
	mov [t162], eax
	mov eax, 1
	mov [t163], eax
	mov eax, p
	add eax, t164
	mov t164, eax
	mov eax, [stack+t164]
	mov [t165], eax
	mov eax, t163
	mul eax, t166
	mov t166, eax
	mov eax, t166
	add eax, t167
	mov t167, eax
	mov eax, p
	add eax, t168
	mov t168, eax
	mov eax, t168
	add eax, t169
	mov t169, eax
	mov eax, t165
	mov eax, t165
	mov [stack+t169], eax
	mov eax, 0
	mov [t170], eax
	mov eax, 0
	mov [t171], eax
	mov eax, t171
	mul eax, t172
	mov t172, eax
	mov eax, t172
	add eax, t173
	mov t173, eax
	mov eax, p
	add eax, t174
	mov t174, eax
	mov eax, t174
	add eax, t175
	mov t175, eax
	mov eax, p
	add eax, t176
	mov t176, eax
	mov eax, [stack+t175]
	mov eax, [stack+t175]
	mov [stack+t176], eax
	mov eax, 0
	mov [t177], eax
	mov eax, 1
	mov [t178], eax
	mov eax, t178
	mul eax, t179
	mov t179, eax
	mov eax, t179
	add eax, t180
	mov t180, eax
	mov eax, p
	add eax, t181
	mov t181, eax
	mov eax, t181
	add eax, t182
	mov t182, eax
	mov eax, p
	add eax, t183
	mov t183, eax
	mov eax, [stack+t182]
	mov eax, [stack+t182]
	mov [stack+t183], eax
	mov eax, 1
	mov [t184], eax
	mov eax, 0
	mov [t185], eax
	mov eax, t185
	mul eax, t186
	mov t186, eax
	mov eax, t186
	add eax, t187
	mov t187, eax
	mov eax, p
	add eax, t188
	mov t188, eax
	mov eax, t188
	add eax, t189
	mov t189, eax
	mov eax, p
	add eax, t190
	mov t190, eax
	mov eax, [stack+t189]
	mov eax, [stack+t189]
	mov [stack+t190], eax
	mov eax, 1
	mov [t191], eax
	mov eax, 1
	mov [t192], eax
	mov eax, t192
	mul eax, t193
	mov t193, eax
	mov eax, t193
	add eax, t194
	mov t194, eax
	mov eax, p
	add eax, t195
	mov t195, eax
	mov eax, t195
	add eax, t196
	mov t196, eax
	mov eax, p
	add eax, t197
	mov t197, eax
	mov eax, [stack+t196]
	mov eax, [stack+t196]
	mov [stack+t197], eax
	mov eax, 0
	mov [t198], eax
	mov eax, p
	add eax, t199
	mov t199, eax
	mov eax, t198
	mov eax, t198
	mov [stack+t199], eax
_etv14:
	mov eax, p
	add eax, t200
	mov t200, eax
	mov eax, [stack+t200]
	mov [t201], eax
	mov eax, 2
	mov [t202], eax
	mov eax, t202
	cmp t201 t202
	jl etv7
	mov t201, eax
	jmp _etv8
_etv7:
	mov eax, p
	add eax, t209
	mov t209, eax
	mov eax, [stack+t209]
	mov [t210], eax
	mov eax, 0
	mov [t211], eax
	mov eax, t211
	cmp t210 t211
	je etv11
	mov t210, eax
	jmp _etv12
_etv11:
	mov rax, labelText9
	call _printSubroutine
	mov eax, p
	add eax, t213
	mov t213, eax
	mov eax, [stack+t213]
	mov [t214], eax
	mov rax, labelText10
	call _printSubroutine
	mov eax, p
	add eax, t215
	mov t215, eax
	mov eax, [stack+t215]
	mov [t216], eax
	mov rax, labelText11
	call _printSubroutine
	mov eax, p
	add eax, t217
	mov t217, eax
	mov eax, [stack+t217]
	mov [t218], eax
	mov rax, labelText12
	call _printSubroutine
	mov eax, p
	add eax, t219
	mov t219, eax
	mov eax, [stack+t219]
	mov [t220], eax
	jmp _etv13
_etv12:
	mov rax, labelText13
	call _printSubroutine
	mov eax, p
	add eax, t221
	mov t221, eax
	mov eax, [stack+t221]
	mov [t222], eax
	mov rax, labelText14
	call _printSubroutine
	mov eax, p
	add eax, t223
	mov t223, eax
	mov eax, [stack+t223]
	mov [t224], eax
	mov rax, labelText15
	call _printSubroutine
	mov eax, p
	add eax, t225
	mov t225, eax
	mov eax, [stack+t225]
	mov [t226], eax
	mov rax, labelText16
	call _printSubroutine
	mov eax, p
	add eax, t227
	mov t227, eax
	mov eax, [stack+t227]
	mov [t228], eax
	jmp _etv13
_etv13:
	mov eax, p
	add eax, t204
	mov t204, eax
	mov eax, [stack+t204]
	mov [t205], eax
	mov eax, 1
	mov [t206], eax
	mov eax, t205
	add eax, t207
	mov t207, eax
	mov eax, p
	add eax, t208
	mov t208, eax
	mov eax, t207
	mov eax, t207
	mov [stack+t208], eax
	jmp _etv14
_etv8:
	jmp _etv9
_etv9:
	mov rax, 60
	mov rdi, 0
	syscall
